{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","getGifs","category","a","url","encodeURI","console","log","fetch","httpRequest","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"6MAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,OAOd,2BACIO,KAAO,OACPC,MAAST,EACTU,SAlBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCSfG,EAjBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAWH,GADtD,sDAEZI,QAAQC,IAAIH,GAFA,SAGcI,MAAMJ,GAHpB,cAGNK,EAHM,gBAIWA,EAAYC,OAJvB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAV9B,kBAcLQ,GAdK,4CAAH,sDCEAO,EAAc,SAACC,GAGxB,OACI,yBAAKC,UAAY,0CACb,yBAAKC,IAAOF,EAAMhB,IAAKmB,IAAQH,EAAMJ,QACrC,2BAAKI,EAAMJ,SCJVQ,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACP3B,EAAQC,GACP2B,MAAM,SAAAC,GACHH,EAAS,CACJhB,KAAMmB,EACNL,SAAS,SAGlB,CAAEvB,IAGEwB,EDV0BK,CAAa7B,GAAjCe,EAPsB,EAO5BN,KAAcc,EAPc,EAOdA,QAGrB,OACI,oCACI,gCAAMvB,EAAN,KACEuB,GAAW,0CAEZ,yBAAKJ,UAAY,aAENJ,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIkB,IAAQlB,EAAIC,IACPD,UEMtBmB,EA1BM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,kBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAEQ+C,EAAWrB,KAAK,SAACX,GACb,OACI,kBAAC,EAAD,CACI8B,IAAO9B,EACPA,SAAYA,UCbtCiC,EAAUC,SAASC,eAAe,QACxCC,IAASC,OACL,kBAAC,EAAD,MACAJ,I","file":"static/js/main.0e6afab3.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n       setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories( cates => [inputValue, ...cates]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=4DW17YMR8fIf5xnYXCh8WDbCpe1aCO2P`;\r\n    console.log(url);\r\n    const httpRequest = await fetch(url);\r\n    const { data } = await httpRequest.json();\r\n    \r\n    const gifs = data.map((img) =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src = {props.url} alt = { props.title} />\r\n            <p>{ props.title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   /*  const [images, setImages] = useState([]);\r\n\r\n */\r\n\r\n\r\n    const {data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            { loading && <p>Cargando...</p> }\r\n            \r\n            {<div className = \"card-grid\" >\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => { \r\n       getGifs(category)\r\n       .then( imgs => {\r\n           setState({\r\n                data: imgs,\r\n                loading: false\r\n           });           \r\n       });\r\n    }, [ category ]);\r\n\r\n\r\n    return state; //{ data:[], loading: true };\r\n};","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {                 \r\n                    categories.map( (category) => {\r\n                        return (\r\n                            <GifGrid \r\n                                key = {category}\r\n                                category = {category}                         \r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"../src/GifExpertApp\";\n\n\nconst divRoot = document.getElementById('root');\nReactDOM.render(\n    <GifExpertApp />,\n    divRoot\n);\n\n"],"sourceRoot":""}